"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServerLimits = void 0;
var ServerLimits = /** @class */ (function () {
    function ServerLimits(maxImageMeta, maxPersonality, maxPersonalitySize, maxSecurityGroupRules, maxSecurityGroups, maxServerGroupMembers, maxServerGroups, maxServerMeta, maxTotalCores, maxTotalFloatingIps, maxTotalInstances, maxTotalKeypairs, maxTotalRAMSize, totalCoresUsed, totalFloatingIpsUsed, totalInstancesUsed, totalRAMUsed, totalSecurityGroupsUsed, totalServerGroupsUsed) {
        this['maxImageMeta'] = maxImageMeta;
        this['maxPersonality'] = maxPersonality;
        this['maxPersonalitySize'] = maxPersonalitySize;
        this['maxSecurityGroupRules'] = maxSecurityGroupRules;
        this['maxSecurityGroups'] = maxSecurityGroups;
        this['maxServerGroupMembers'] = maxServerGroupMembers;
        this['maxServerGroups'] = maxServerGroups;
        this['maxServerMeta'] = maxServerMeta;
        this['maxTotalCores'] = maxTotalCores;
        this['maxTotalFloatingIps'] = maxTotalFloatingIps;
        this['maxTotalInstances'] = maxTotalInstances;
        this['maxTotalKeypairs'] = maxTotalKeypairs;
        this['maxTotalRAMSize'] = maxTotalRAMSize;
        this['totalCoresUsed'] = totalCoresUsed;
        this['totalFloatingIpsUsed'] = totalFloatingIpsUsed;
        this['totalInstancesUsed'] = totalInstancesUsed;
        this['totalRAMUsed'] = totalRAMUsed;
        this['totalSecurityGroupsUsed'] = totalSecurityGroupsUsed;
        this['totalServerGroupsUsed'] = totalServerGroupsUsed;
    }
    ServerLimits.prototype.withMaxImageMeta = function (maxImageMeta) {
        this['maxImageMeta'] = maxImageMeta;
        return this;
    };
    ServerLimits.prototype.withMaxPersonality = function (maxPersonality) {
        this['maxPersonality'] = maxPersonality;
        return this;
    };
    ServerLimits.prototype.withMaxPersonalitySize = function (maxPersonalitySize) {
        this['maxPersonalitySize'] = maxPersonalitySize;
        return this;
    };
    ServerLimits.prototype.withMaxSecurityGroupRules = function (maxSecurityGroupRules) {
        this['maxSecurityGroupRules'] = maxSecurityGroupRules;
        return this;
    };
    ServerLimits.prototype.withMaxSecurityGroups = function (maxSecurityGroups) {
        this['maxSecurityGroups'] = maxSecurityGroups;
        return this;
    };
    ServerLimits.prototype.withMaxServerGroupMembers = function (maxServerGroupMembers) {
        this['maxServerGroupMembers'] = maxServerGroupMembers;
        return this;
    };
    ServerLimits.prototype.withMaxServerGroups = function (maxServerGroups) {
        this['maxServerGroups'] = maxServerGroups;
        return this;
    };
    ServerLimits.prototype.withMaxServerMeta = function (maxServerMeta) {
        this['maxServerMeta'] = maxServerMeta;
        return this;
    };
    ServerLimits.prototype.withMaxTotalCores = function (maxTotalCores) {
        this['maxTotalCores'] = maxTotalCores;
        return this;
    };
    ServerLimits.prototype.withMaxTotalFloatingIps = function (maxTotalFloatingIps) {
        this['maxTotalFloatingIps'] = maxTotalFloatingIps;
        return this;
    };
    ServerLimits.prototype.withMaxTotalInstances = function (maxTotalInstances) {
        this['maxTotalInstances'] = maxTotalInstances;
        return this;
    };
    ServerLimits.prototype.withMaxTotalKeypairs = function (maxTotalKeypairs) {
        this['maxTotalKeypairs'] = maxTotalKeypairs;
        return this;
    };
    ServerLimits.prototype.withMaxTotalRAMSize = function (maxTotalRAMSize) {
        this['maxTotalRAMSize'] = maxTotalRAMSize;
        return this;
    };
    ServerLimits.prototype.withTotalCoresUsed = function (totalCoresUsed) {
        this['totalCoresUsed'] = totalCoresUsed;
        return this;
    };
    ServerLimits.prototype.withTotalFloatingIpsUsed = function (totalFloatingIpsUsed) {
        this['totalFloatingIpsUsed'] = totalFloatingIpsUsed;
        return this;
    };
    ServerLimits.prototype.withTotalInstancesUsed = function (totalInstancesUsed) {
        this['totalInstancesUsed'] = totalInstancesUsed;
        return this;
    };
    ServerLimits.prototype.withTotalRAMUsed = function (totalRAMUsed) {
        this['totalRAMUsed'] = totalRAMUsed;
        return this;
    };
    ServerLimits.prototype.withTotalSecurityGroupsUsed = function (totalSecurityGroupsUsed) {
        this['totalSecurityGroupsUsed'] = totalSecurityGroupsUsed;
        return this;
    };
    ServerLimits.prototype.withTotalServerGroupsUsed = function (totalServerGroupsUsed) {
        this['totalServerGroupsUsed'] = totalServerGroupsUsed;
        return this;
    };
    ServerLimits.prototype.withMaxTotalSpotInstances = function (maxTotalSpotInstances) {
        this['maxTotalSpotInstances'] = maxTotalSpotInstances;
        return this;
    };
    ServerLimits.prototype.withMaxTotalSpotCores = function (maxTotalSpotCores) {
        this['maxTotalSpotCores'] = maxTotalSpotCores;
        return this;
    };
    ServerLimits.prototype.withMaxTotalSpotRAMSize = function (maxTotalSpotRAMSize) {
        this['maxTotalSpotRAMSize'] = maxTotalSpotRAMSize;
        return this;
    };
    ServerLimits.prototype.withTotalSpotInstancesUsed = function (totalSpotInstancesUsed) {
        this['totalSpotInstancesUsed'] = totalSpotInstancesUsed;
        return this;
    };
    ServerLimits.prototype.withTotalSpotCoresUsed = function (totalSpotCoresUsed) {
        this['totalSpotCoresUsed'] = totalSpotCoresUsed;
        return this;
    };
    ServerLimits.prototype.withTotalSpotRAMUsed = function (totalSpotRAMUsed) {
        this['totalSpotRAMUsed'] = totalSpotRAMUsed;
        return this;
    };
    ServerLimits.prototype.withLimitByFlavor = function (limitByFlavor) {
        this['limit_by_flavor'] = limitByFlavor;
        return this;
    };
    Object.defineProperty(ServerLimits.prototype, "limitByFlavor", {
        get: function () {
            return this['limit_by_flavor'];
        },
        set: function (limitByFlavor) {
            this['limit_by_flavor'] = limitByFlavor;
        },
        enumerable: false,
        configurable: true
    });
    return ServerLimits;
}());
exports.ServerLimits = ServerLimits;
