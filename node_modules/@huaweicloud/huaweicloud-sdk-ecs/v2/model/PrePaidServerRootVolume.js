"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrePaidServerRootVolumeClusterTypeEnum = exports.PrePaidServerRootVolumeVolumetypeEnum = exports.PrePaidServerRootVolume = void 0;
var PrePaidServerRootVolume = /** @class */ (function () {
    function PrePaidServerRootVolume(volumetype) {
        this['volumetype'] = volumetype;
    }
    PrePaidServerRootVolume.prototype.withVolumetype = function (volumetype) {
        this['volumetype'] = volumetype;
        return this;
    };
    PrePaidServerRootVolume.prototype.withSize = function (size) {
        this['size'] = size;
        return this;
    };
    PrePaidServerRootVolume.prototype.withExtendparam = function (extendparam) {
        this['extendparam'] = extendparam;
        return this;
    };
    PrePaidServerRootVolume.prototype.withClusterType = function (clusterType) {
        this['cluster_type'] = clusterType;
        return this;
    };
    Object.defineProperty(PrePaidServerRootVolume.prototype, "clusterType", {
        get: function () {
            return this['cluster_type'];
        },
        set: function (clusterType) {
            this['cluster_type'] = clusterType;
        },
        enumerable: false,
        configurable: true
    });
    PrePaidServerRootVolume.prototype.withClusterId = function (clusterId) {
        this['cluster_id'] = clusterId;
        return this;
    };
    Object.defineProperty(PrePaidServerRootVolume.prototype, "clusterId", {
        get: function () {
            return this['cluster_id'];
        },
        set: function (clusterId) {
            this['cluster_id'] = clusterId;
        },
        enumerable: false,
        configurable: true
    });
    PrePaidServerRootVolume.prototype.withHwPassthrough = function (hwPassthrough) {
        this['hw:passthrough'] = hwPassthrough;
        return this;
    };
    Object.defineProperty(PrePaidServerRootVolume.prototype, "hwPassthrough", {
        get: function () {
            return this['hw:passthrough'];
        },
        set: function (hwPassthrough) {
            this['hw:passthrough'] = hwPassthrough;
        },
        enumerable: false,
        configurable: true
    });
    return PrePaidServerRootVolume;
}());
exports.PrePaidServerRootVolume = PrePaidServerRootVolume;
/**
    * @export
    * @enum {string}
    */
var PrePaidServerRootVolumeVolumetypeEnum;
(function (PrePaidServerRootVolumeVolumetypeEnum) {
    PrePaidServerRootVolumeVolumetypeEnum["SATA"] = "SATA";
    PrePaidServerRootVolumeVolumetypeEnum["SAS"] = "SAS";
    PrePaidServerRootVolumeVolumetypeEnum["SSD"] = "SSD";
    PrePaidServerRootVolumeVolumetypeEnum["GPSSD"] = "GPSSD";
    PrePaidServerRootVolumeVolumetypeEnum["CO_P1"] = "co-p1";
    PrePaidServerRootVolumeVolumetypeEnum["UH_L1"] = "uh-l1";
})(PrePaidServerRootVolumeVolumetypeEnum = exports.PrePaidServerRootVolumeVolumetypeEnum || (exports.PrePaidServerRootVolumeVolumetypeEnum = {}));
/**
    * @export
    * @enum {string}
    */
var PrePaidServerRootVolumeClusterTypeEnum;
(function (PrePaidServerRootVolumeClusterTypeEnum) {
    PrePaidServerRootVolumeClusterTypeEnum["DSS"] = "DSS";
})(PrePaidServerRootVolumeClusterTypeEnum = exports.PrePaidServerRootVolumeClusterTypeEnum || (exports.PrePaidServerRootVolumeClusterTypeEnum = {}));
