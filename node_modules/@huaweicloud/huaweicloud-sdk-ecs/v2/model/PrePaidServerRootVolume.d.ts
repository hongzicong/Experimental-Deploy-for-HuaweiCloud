import { PrePaidServerRootVolumeExtendParam } from './PrePaidServerRootVolumeExtendParam';
export declare class PrePaidServerRootVolume {
    volumetype: PrePaidServerRootVolumeVolumetypeEnum;
    size?: number;
    extendparam?: PrePaidServerRootVolumeExtendParam;
    private 'cluster_type'?;
    private 'cluster_id'?;
    private 'hw:passthrough'?;
    constructor(volumetype?: any);
    withVolumetype(volumetype: PrePaidServerRootVolumeVolumetypeEnum): PrePaidServerRootVolume;
    withSize(size: number): PrePaidServerRootVolume;
    withExtendparam(extendparam: PrePaidServerRootVolumeExtendParam): PrePaidServerRootVolume;
    withClusterType(clusterType: PrePaidServerRootVolumeClusterTypeEnum): PrePaidServerRootVolume;
    set clusterType(clusterType: PrePaidServerRootVolumeClusterTypeEnum | undefined);
    get clusterType(): PrePaidServerRootVolumeClusterTypeEnum | undefined;
    withClusterId(clusterId: string): PrePaidServerRootVolume;
    set clusterId(clusterId: string | undefined);
    get clusterId(): string | undefined;
    withHwPassthrough(hwPassthrough: boolean): PrePaidServerRootVolume;
    set hwPassthrough(hwPassthrough: boolean | undefined);
    get hwPassthrough(): boolean | undefined;
}
/**
    * @export
    * @enum {string}
    */
export declare enum PrePaidServerRootVolumeVolumetypeEnum {
    SATA = "SATA",
    SAS = "SAS",
    SSD = "SSD",
    GPSSD = "GPSSD",
    CO_P1 = "co-p1",
    UH_L1 = "uh-l1"
}
/**
    * @export
    * @enum {string}
    */
export declare enum PrePaidServerRootVolumeClusterTypeEnum {
    DSS = "DSS"
}
