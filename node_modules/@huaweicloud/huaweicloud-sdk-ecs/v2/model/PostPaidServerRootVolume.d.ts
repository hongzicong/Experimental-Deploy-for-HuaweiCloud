import { PostPaidServerRootVolumeExtendParam } from './PostPaidServerRootVolumeExtendParam';
export declare class PostPaidServerRootVolume {
    volumetype: PostPaidServerRootVolumeVolumetypeEnum;
    size?: number;
    private 'hw:passthrough'?;
    private 'cluster_type'?;
    private 'cluster_id'?;
    extendparam?: PostPaidServerRootVolumeExtendParam;
    constructor(volumetype?: any);
    withVolumetype(volumetype: PostPaidServerRootVolumeVolumetypeEnum): PostPaidServerRootVolume;
    withSize(size: number): PostPaidServerRootVolume;
    withHwPassthrough(hwPassthrough: boolean): PostPaidServerRootVolume;
    set hwPassthrough(hwPassthrough: boolean | undefined);
    get hwPassthrough(): boolean | undefined;
    withClusterType(clusterType: PostPaidServerRootVolumeClusterTypeEnum): PostPaidServerRootVolume;
    set clusterType(clusterType: PostPaidServerRootVolumeClusterTypeEnum | undefined);
    get clusterType(): PostPaidServerRootVolumeClusterTypeEnum | undefined;
    withClusterId(clusterId: string): PostPaidServerRootVolume;
    set clusterId(clusterId: string | undefined);
    get clusterId(): string | undefined;
    withExtendparam(extendparam: PostPaidServerRootVolumeExtendParam): PostPaidServerRootVolume;
}
/**
    * @export
    * @enum {string}
    */
export declare enum PostPaidServerRootVolumeVolumetypeEnum {
    SATA = "SATA",
    SAS = "SAS",
    SSD = "SSD",
    GPSSD = "GPSSD",
    CO_P1 = "co-p1",
    UH_L1 = "uh-l1"
}
/**
    * @export
    * @enum {string}
    */
export declare enum PostPaidServerRootVolumeClusterTypeEnum {
    DSS = "DSS"
}
