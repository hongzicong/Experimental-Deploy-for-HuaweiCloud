import { ServerInterfaceFixedIp } from './ServerInterfaceFixedIp';
export declare class InterfaceAttachment {
    private 'fixed_ips'?;
    private 'mac_addr'?;
    private 'net_id'?;
    private 'port_id'?;
    private 'port_state'?;
    private 'delete_on_termination'?;
    private 'driver_mode'?;
    private 'min_rate'?;
    private 'multiqueue_num'?;
    private 'pci_address'?;
    constructor();
    withFixedIps(fixedIps: Array<ServerInterfaceFixedIp>): InterfaceAttachment;
    set fixedIps(fixedIps: Array<ServerInterfaceFixedIp> | undefined);
    get fixedIps(): Array<ServerInterfaceFixedIp> | undefined;
    withMacAddr(macAddr: string): InterfaceAttachment;
    set macAddr(macAddr: string | undefined);
    get macAddr(): string | undefined;
    withNetId(netId: string): InterfaceAttachment;
    set netId(netId: string | undefined);
    get netId(): string | undefined;
    withPortId(portId: string): InterfaceAttachment;
    set portId(portId: string | undefined);
    get portId(): string | undefined;
    withPortState(portState: string): InterfaceAttachment;
    set portState(portState: string | undefined);
    get portState(): string | undefined;
    withDeleteOnTermination(deleteOnTermination: boolean): InterfaceAttachment;
    set deleteOnTermination(deleteOnTermination: boolean | undefined);
    get deleteOnTermination(): boolean | undefined;
    withDriverMode(driverMode: string): InterfaceAttachment;
    set driverMode(driverMode: string | undefined);
    get driverMode(): string | undefined;
    withMinRate(minRate: number): InterfaceAttachment;
    set minRate(minRate: number | undefined);
    get minRate(): number | undefined;
    withMultiqueueNum(multiqueueNum: number): InterfaceAttachment;
    set multiqueueNum(multiqueueNum: number | undefined);
    get multiqueueNum(): number | undefined;
    withPciAddress(pciAddress: string): InterfaceAttachment;
    set pciAddress(pciAddress: string | undefined);
    get pciAddress(): string | undefined;
}
