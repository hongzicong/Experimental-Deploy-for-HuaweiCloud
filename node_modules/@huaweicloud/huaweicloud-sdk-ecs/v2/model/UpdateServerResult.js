"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateServerResult = void 0;
var UpdateServerResult = /** @class */ (function () {
    function UpdateServerResult(tenantId, image, accessIPv4, accessIPv6, metadata, addresses, created, hostId, flavor, userId, name, progress, links, id, updated, tags, status, oSEXTSRVATTRHostname) {
        this['tenant_id'] = tenantId;
        this['image'] = image;
        this['accessIPv4'] = accessIPv4;
        this['accessIPv6'] = accessIPv6;
        this['metadata'] = metadata;
        this['addresses'] = addresses;
        this['created'] = created;
        this['hostId'] = hostId;
        this['flavor'] = flavor;
        this['user_id'] = userId;
        this['name'] = name;
        this['progress'] = progress;
        this['links'] = links;
        this['id'] = id;
        this['updated'] = updated;
        this['tags'] = tags;
        this['status'] = status;
        this['OS-EXT-SRV-ATTR:hostname'] = oSEXTSRVATTRHostname;
    }
    UpdateServerResult.prototype.withTenantId = function (tenantId) {
        this['tenant_id'] = tenantId;
        return this;
    };
    Object.defineProperty(UpdateServerResult.prototype, "tenantId", {
        get: function () {
            return this['tenant_id'];
        },
        set: function (tenantId) {
            this['tenant_id'] = tenantId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateServerResult.prototype.withImage = function (image) {
        this['image'] = image;
        return this;
    };
    UpdateServerResult.prototype.withAccessIPv4 = function (accessIPv4) {
        this['accessIPv4'] = accessIPv4;
        return this;
    };
    UpdateServerResult.prototype.withAccessIPv6 = function (accessIPv6) {
        this['accessIPv6'] = accessIPv6;
        return this;
    };
    UpdateServerResult.prototype.withMetadata = function (metadata) {
        this['metadata'] = metadata;
        return this;
    };
    UpdateServerResult.prototype.withAddresses = function (addresses) {
        this['addresses'] = addresses;
        return this;
    };
    UpdateServerResult.prototype.withCreated = function (created) {
        this['created'] = created;
        return this;
    };
    UpdateServerResult.prototype.withHostId = function (hostId) {
        this['hostId'] = hostId;
        return this;
    };
    UpdateServerResult.prototype.withFlavor = function (flavor) {
        this['flavor'] = flavor;
        return this;
    };
    UpdateServerResult.prototype.withOSDCFDiskConfig = function (oSDCFDiskConfig) {
        this['OS-DCF:diskConfig'] = oSDCFDiskConfig;
        return this;
    };
    Object.defineProperty(UpdateServerResult.prototype, "oSDCFDiskConfig", {
        get: function () {
            return this['OS-DCF:diskConfig'];
        },
        set: function (oSDCFDiskConfig) {
            this['OS-DCF:diskConfig'] = oSDCFDiskConfig;
        },
        enumerable: false,
        configurable: true
    });
    UpdateServerResult.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(UpdateServerResult.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateServerResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    UpdateServerResult.prototype.withProgress = function (progress) {
        this['progress'] = progress;
        return this;
    };
    UpdateServerResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    UpdateServerResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    UpdateServerResult.prototype.withUpdated = function (updated) {
        this['updated'] = updated;
        return this;
    };
    UpdateServerResult.prototype.withLocked = function (locked) {
        this['locked'] = locked;
        return this;
    };
    UpdateServerResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    UpdateServerResult.prototype.withTags = function (tags) {
        this['tags'] = tags;
        return this;
    };
    UpdateServerResult.prototype.withStatus = function (status) {
        this['status'] = status;
        return this;
    };
    UpdateServerResult.prototype.withOSEXTSRVATTRHostname = function (oSEXTSRVATTRHostname) {
        this['OS-EXT-SRV-ATTR:hostname'] = oSEXTSRVATTRHostname;
        return this;
    };
    Object.defineProperty(UpdateServerResult.prototype, "oSEXTSRVATTRHostname", {
        get: function () {
            return this['OS-EXT-SRV-ATTR:hostname'];
        },
        set: function (oSEXTSRVATTRHostname) {
            this['OS-EXT-SRV-ATTR:hostname'] = oSEXTSRVATTRHostname;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateServerResult;
}());
exports.UpdateServerResult = UpdateServerResult;
