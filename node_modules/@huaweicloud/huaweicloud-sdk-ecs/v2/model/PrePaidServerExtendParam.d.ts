export declare class PrePaidServerExtendParam {
    chargingMode?: PrePaidServerExtendParamChargingModeEnum;
    regionID?: string;
    periodType?: PrePaidServerExtendParamPeriodTypeEnum;
    periodNum?: number;
    isAutoRenew?: PrePaidServerExtendParamIsAutoRenewEnum;
    isAutoPay?: PrePaidServerExtendParamIsAutoPayEnum;
    private 'enterprise_project_id'?;
    private 'support_auto_recovery'?;
    marketType?: string;
    spotPrice?: string;
    diskPrior?: string;
    private 'spot_duration_hours'?;
    private 'interruption_policy'?;
    private 'spot_duration_count'?;
    constructor();
    withChargingMode(chargingMode: PrePaidServerExtendParamChargingModeEnum): PrePaidServerExtendParam;
    withRegionID(regionID: string): PrePaidServerExtendParam;
    withPeriodType(periodType: PrePaidServerExtendParamPeriodTypeEnum): PrePaidServerExtendParam;
    withPeriodNum(periodNum: number): PrePaidServerExtendParam;
    withIsAutoRenew(isAutoRenew: PrePaidServerExtendParamIsAutoRenewEnum): PrePaidServerExtendParam;
    withIsAutoPay(isAutoPay: PrePaidServerExtendParamIsAutoPayEnum): PrePaidServerExtendParam;
    withEnterpriseProjectId(enterpriseProjectId: string): PrePaidServerExtendParam;
    set enterpriseProjectId(enterpriseProjectId: string | undefined);
    get enterpriseProjectId(): string | undefined;
    withSupportAutoRecovery(supportAutoRecovery: boolean): PrePaidServerExtendParam;
    set supportAutoRecovery(supportAutoRecovery: boolean | undefined);
    get supportAutoRecovery(): boolean | undefined;
    withMarketType(marketType: string): PrePaidServerExtendParam;
    withSpotPrice(spotPrice: string): PrePaidServerExtendParam;
    withDiskPrior(diskPrior: string): PrePaidServerExtendParam;
    withSpotDurationHours(spotDurationHours: number): PrePaidServerExtendParam;
    set spotDurationHours(spotDurationHours: number | undefined);
    get spotDurationHours(): number | undefined;
    withInterruptionPolicy(interruptionPolicy: PrePaidServerExtendParamInterruptionPolicyEnum): PrePaidServerExtendParam;
    set interruptionPolicy(interruptionPolicy: PrePaidServerExtendParamInterruptionPolicyEnum | undefined);
    get interruptionPolicy(): PrePaidServerExtendParamInterruptionPolicyEnum | undefined;
    withSpotDurationCount(spotDurationCount: number): PrePaidServerExtendParam;
    set spotDurationCount(spotDurationCount: number | undefined);
    get spotDurationCount(): number | undefined;
}
/**
    * @export
    * @enum {string}
    */
export declare enum PrePaidServerExtendParamChargingModeEnum {
    PREPAID = "prePaid",
    POSTPAID = "postPaid"
}
/**
    * @export
    * @enum {string}
    */
export declare enum PrePaidServerExtendParamPeriodTypeEnum {
    MONTH = "month",
    YEAR = "year"
}
/**
    * @export
    * @enum {string}
    */
export declare enum PrePaidServerExtendParamIsAutoRenewEnum {
    TRUE = "true",
    FALSE = "false"
}
/**
    * @export
    * @enum {string}
    */
export declare enum PrePaidServerExtendParamIsAutoPayEnum {
    TRUE = "true",
    FALSE = "false"
}
/**
    * @export
    * @enum {string}
    */
export declare enum PrePaidServerExtendParamInterruptionPolicyEnum {
    IMMEDIATE = "immediate"
}
