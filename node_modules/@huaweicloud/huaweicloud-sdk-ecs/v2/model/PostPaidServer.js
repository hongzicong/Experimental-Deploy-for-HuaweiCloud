"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostPaidServer = void 0;
var PostPaidServer = /** @class */ (function () {
    function PostPaidServer(flavorRef, imageRef, name, nics, rootVolume, vpcid) {
        this['flavorRef'] = flavorRef;
        this['imageRef'] = imageRef;
        this['name'] = name;
        this['nics'] = nics;
        this['root_volume'] = rootVolume;
        this['vpcid'] = vpcid;
    }
    PostPaidServer.prototype.withAutoTerminateTime = function (autoTerminateTime) {
        this['auto_terminate_time'] = autoTerminateTime;
        return this;
    };
    Object.defineProperty(PostPaidServer.prototype, "autoTerminateTime", {
        get: function () {
            return this['auto_terminate_time'];
        },
        set: function (autoTerminateTime) {
            this['auto_terminate_time'] = autoTerminateTime;
        },
        enumerable: false,
        configurable: true
    });
    PostPaidServer.prototype.withAdminPass = function (adminPass) {
        this['adminPass'] = adminPass;
        return this;
    };
    PostPaidServer.prototype.withAvailabilityZone = function (availabilityZone) {
        this['availability_zone'] = availabilityZone;
        return this;
    };
    Object.defineProperty(PostPaidServer.prototype, "availabilityZone", {
        get: function () {
            return this['availability_zone'];
        },
        set: function (availabilityZone) {
            this['availability_zone'] = availabilityZone;
        },
        enumerable: false,
        configurable: true
    });
    PostPaidServer.prototype.withCount = function (count) {
        this['count'] = count;
        return this;
    };
    PostPaidServer.prototype.withDataVolumes = function (dataVolumes) {
        this['data_volumes'] = dataVolumes;
        return this;
    };
    Object.defineProperty(PostPaidServer.prototype, "dataVolumes", {
        get: function () {
            return this['data_volumes'];
        },
        set: function (dataVolumes) {
            this['data_volumes'] = dataVolumes;
        },
        enumerable: false,
        configurable: true
    });
    PostPaidServer.prototype.withExtendparam = function (extendparam) {
        this['extendparam'] = extendparam;
        return this;
    };
    PostPaidServer.prototype.withFlavorRef = function (flavorRef) {
        this['flavorRef'] = flavorRef;
        return this;
    };
    PostPaidServer.prototype.withImageRef = function (imageRef) {
        this['imageRef'] = imageRef;
        return this;
    };
    PostPaidServer.prototype.withIsAutoRename = function (isAutoRename) {
        this['isAutoRename'] = isAutoRename;
        return this;
    };
    PostPaidServer.prototype.withKeyName = function (keyName) {
        this['key_name'] = keyName;
        return this;
    };
    Object.defineProperty(PostPaidServer.prototype, "keyName", {
        get: function () {
            return this['key_name'];
        },
        set: function (keyName) {
            this['key_name'] = keyName;
        },
        enumerable: false,
        configurable: true
    });
    PostPaidServer.prototype.withMetadata = function (metadata) {
        this['metadata'] = metadata;
        return this;
    };
    PostPaidServer.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    PostPaidServer.prototype.withNics = function (nics) {
        this['nics'] = nics;
        return this;
    };
    PostPaidServer.prototype.withOsSchedulerHints = function (osSchedulerHints) {
        this['os:scheduler_hints'] = osSchedulerHints;
        return this;
    };
    Object.defineProperty(PostPaidServer.prototype, "osSchedulerHints", {
        get: function () {
            return this['os:scheduler_hints'];
        },
        set: function (osSchedulerHints) {
            this['os:scheduler_hints'] = osSchedulerHints;
        },
        enumerable: false,
        configurable: true
    });
    PostPaidServer.prototype.withPublicip = function (publicip) {
        this['publicip'] = publicip;
        return this;
    };
    PostPaidServer.prototype.withRootVolume = function (rootVolume) {
        this['root_volume'] = rootVolume;
        return this;
    };
    Object.defineProperty(PostPaidServer.prototype, "rootVolume", {
        get: function () {
            return this['root_volume'];
        },
        set: function (rootVolume) {
            this['root_volume'] = rootVolume;
        },
        enumerable: false,
        configurable: true
    });
    PostPaidServer.prototype.withSecurityGroups = function (securityGroups) {
        this['security_groups'] = securityGroups;
        return this;
    };
    Object.defineProperty(PostPaidServer.prototype, "securityGroups", {
        get: function () {
            return this['security_groups'];
        },
        set: function (securityGroups) {
            this['security_groups'] = securityGroups;
        },
        enumerable: false,
        configurable: true
    });
    PostPaidServer.prototype.withServerTags = function (serverTags) {
        this['server_tags'] = serverTags;
        return this;
    };
    Object.defineProperty(PostPaidServer.prototype, "serverTags", {
        get: function () {
            return this['server_tags'];
        },
        set: function (serverTags) {
            this['server_tags'] = serverTags;
        },
        enumerable: false,
        configurable: true
    });
    PostPaidServer.prototype.withTags = function (tags) {
        this['tags'] = tags;
        return this;
    };
    PostPaidServer.prototype.withUserData = function (userData) {
        this['user_data'] = userData;
        return this;
    };
    Object.defineProperty(PostPaidServer.prototype, "userData", {
        get: function () {
            return this['user_data'];
        },
        set: function (userData) {
            this['user_data'] = userData;
        },
        enumerable: false,
        configurable: true
    });
    PostPaidServer.prototype.withVpcid = function (vpcid) {
        this['vpcid'] = vpcid;
        return this;
    };
    PostPaidServer.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    return PostPaidServer;
}());
exports.PostPaidServer = PostPaidServer;
