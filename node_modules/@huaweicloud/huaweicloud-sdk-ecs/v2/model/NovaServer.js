"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NovaServerHostStatusEnum = exports.NovaServerOSEXTSTSVmStateEnum = exports.NovaServerOSEXTSTSTaskStateEnum = exports.NovaServerOSDCFDiskConfigEnum = exports.NovaServerStatusEnum = exports.NovaServer = void 0;
var NovaServer = /** @class */ (function () {
    function NovaServer(name, id, status, created, updated, flavor, image, tenantId, keyName, userId, metadata, hostId, addresses, securityGroups, links, oSDCFDiskConfig, oSEXTAZAvailabilityZone, oSEXTSRVATTRHost, oSEXTSRVATTRHypervisorHostname, oSEXTSRVATTRInstanceName, oSEXTSTSPowerState, oSEXTSTSTaskState, oSEXTSTSVmState, oSSRVUSGLaunchedAt, oSSRVUSGTerminatedAt, osExtendedVolumesVolumesAttached, hostStatus, tags, accessIPv4, accessIPv6, configDrive, progress) {
        this['name'] = name;
        this['id'] = id;
        this['status'] = status;
        this['created'] = created;
        this['updated'] = updated;
        this['flavor'] = flavor;
        this['image'] = image;
        this['tenant_id'] = tenantId;
        this['key_name'] = keyName;
        this['user_id'] = userId;
        this['metadata'] = metadata;
        this['hostId'] = hostId;
        this['addresses'] = addresses;
        this['security_groups'] = securityGroups;
        this['links'] = links;
        this['OS-DCF:diskConfig'] = oSDCFDiskConfig;
        this['OS-EXT-AZ:availability_zone'] = oSEXTAZAvailabilityZone;
        this['OS-EXT-SRV-ATTR:host'] = oSEXTSRVATTRHost;
        this['OS-EXT-SRV-ATTR:hypervisor_hostname'] = oSEXTSRVATTRHypervisorHostname;
        this['OS-EXT-SRV-ATTR:instance_name'] = oSEXTSRVATTRInstanceName;
        this['OS-EXT-STS:power_state'] = oSEXTSTSPowerState;
        this['OS-EXT-STS:task_state'] = oSEXTSTSTaskState;
        this['OS-EXT-STS:vm_state'] = oSEXTSTSVmState;
        this['OS-SRV-USG:launched_at'] = oSSRVUSGLaunchedAt;
        this['OS-SRV-USG:terminated_at'] = oSSRVUSGTerminatedAt;
        this['os-extended-volumes:volumes_attached'] = osExtendedVolumesVolumesAttached;
        this['host_status'] = hostStatus;
        this['tags'] = tags;
        this['accessIPv4'] = accessIPv4;
        this['accessIPv6'] = accessIPv6;
        this['config_drive'] = configDrive;
        this['progress'] = progress;
    }
    NovaServer.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    NovaServer.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    NovaServer.prototype.withStatus = function (status) {
        this['status'] = status;
        return this;
    };
    NovaServer.prototype.withCreated = function (created) {
        this['created'] = created;
        return this;
    };
    NovaServer.prototype.withUpdated = function (updated) {
        this['updated'] = updated;
        return this;
    };
    NovaServer.prototype.withFlavor = function (flavor) {
        this['flavor'] = flavor;
        return this;
    };
    NovaServer.prototype.withImage = function (image) {
        this['image'] = image;
        return this;
    };
    NovaServer.prototype.withTenantId = function (tenantId) {
        this['tenant_id'] = tenantId;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "tenantId", {
        get: function () {
            return this['tenant_id'];
        },
        set: function (tenantId) {
            this['tenant_id'] = tenantId;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withKeyName = function (keyName) {
        this['key_name'] = keyName;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "keyName", {
        get: function () {
            return this['key_name'];
        },
        set: function (keyName) {
            this['key_name'] = keyName;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withMetadata = function (metadata) {
        this['metadata'] = metadata;
        return this;
    };
    NovaServer.prototype.withHostId = function (hostId) {
        this['hostId'] = hostId;
        return this;
    };
    NovaServer.prototype.withAddresses = function (addresses) {
        this['addresses'] = addresses;
        return this;
    };
    NovaServer.prototype.withSecurityGroups = function (securityGroups) {
        this['security_groups'] = securityGroups;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "securityGroups", {
        get: function () {
            return this['security_groups'];
        },
        set: function (securityGroups) {
            this['security_groups'] = securityGroups;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    NovaServer.prototype.withOSDCFDiskConfig = function (oSDCFDiskConfig) {
        this['OS-DCF:diskConfig'] = oSDCFDiskConfig;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "oSDCFDiskConfig", {
        get: function () {
            return this['OS-DCF:diskConfig'];
        },
        set: function (oSDCFDiskConfig) {
            this['OS-DCF:diskConfig'] = oSDCFDiskConfig;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withOSEXTAZAvailabilityZone = function (oSEXTAZAvailabilityZone) {
        this['OS-EXT-AZ:availability_zone'] = oSEXTAZAvailabilityZone;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "oSEXTAZAvailabilityZone", {
        get: function () {
            return this['OS-EXT-AZ:availability_zone'];
        },
        set: function (oSEXTAZAvailabilityZone) {
            this['OS-EXT-AZ:availability_zone'] = oSEXTAZAvailabilityZone;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withOSEXTSRVATTRHost = function (oSEXTSRVATTRHost) {
        this['OS-EXT-SRV-ATTR:host'] = oSEXTSRVATTRHost;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "oSEXTSRVATTRHost", {
        get: function () {
            return this['OS-EXT-SRV-ATTR:host'];
        },
        set: function (oSEXTSRVATTRHost) {
            this['OS-EXT-SRV-ATTR:host'] = oSEXTSRVATTRHost;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withOSEXTSRVATTRHypervisorHostname = function (oSEXTSRVATTRHypervisorHostname) {
        this['OS-EXT-SRV-ATTR:hypervisor_hostname'] = oSEXTSRVATTRHypervisorHostname;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "oSEXTSRVATTRHypervisorHostname", {
        get: function () {
            return this['OS-EXT-SRV-ATTR:hypervisor_hostname'];
        },
        set: function (oSEXTSRVATTRHypervisorHostname) {
            this['OS-EXT-SRV-ATTR:hypervisor_hostname'] = oSEXTSRVATTRHypervisorHostname;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withOSEXTSRVATTRInstanceName = function (oSEXTSRVATTRInstanceName) {
        this['OS-EXT-SRV-ATTR:instance_name'] = oSEXTSRVATTRInstanceName;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "oSEXTSRVATTRInstanceName", {
        get: function () {
            return this['OS-EXT-SRV-ATTR:instance_name'];
        },
        set: function (oSEXTSRVATTRInstanceName) {
            this['OS-EXT-SRV-ATTR:instance_name'] = oSEXTSRVATTRInstanceName;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withOSEXTSTSPowerState = function (oSEXTSTSPowerState) {
        this['OS-EXT-STS:power_state'] = oSEXTSTSPowerState;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "oSEXTSTSPowerState", {
        get: function () {
            return this['OS-EXT-STS:power_state'];
        },
        set: function (oSEXTSTSPowerState) {
            this['OS-EXT-STS:power_state'] = oSEXTSTSPowerState;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withOSEXTSTSTaskState = function (oSEXTSTSTaskState) {
        this['OS-EXT-STS:task_state'] = oSEXTSTSTaskState;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "oSEXTSTSTaskState", {
        get: function () {
            return this['OS-EXT-STS:task_state'];
        },
        set: function (oSEXTSTSTaskState) {
            this['OS-EXT-STS:task_state'] = oSEXTSTSTaskState;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withOSEXTSTSVmState = function (oSEXTSTSVmState) {
        this['OS-EXT-STS:vm_state'] = oSEXTSTSVmState;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "oSEXTSTSVmState", {
        get: function () {
            return this['OS-EXT-STS:vm_state'];
        },
        set: function (oSEXTSTSVmState) {
            this['OS-EXT-STS:vm_state'] = oSEXTSTSVmState;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withOSSRVUSGLaunchedAt = function (oSSRVUSGLaunchedAt) {
        this['OS-SRV-USG:launched_at'] = oSSRVUSGLaunchedAt;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "oSSRVUSGLaunchedAt", {
        get: function () {
            return this['OS-SRV-USG:launched_at'];
        },
        set: function (oSSRVUSGLaunchedAt) {
            this['OS-SRV-USG:launched_at'] = oSSRVUSGLaunchedAt;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withOSSRVUSGTerminatedAt = function (oSSRVUSGTerminatedAt) {
        this['OS-SRV-USG:terminated_at'] = oSSRVUSGTerminatedAt;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "oSSRVUSGTerminatedAt", {
        get: function () {
            return this['OS-SRV-USG:terminated_at'];
        },
        set: function (oSSRVUSGTerminatedAt) {
            this['OS-SRV-USG:terminated_at'] = oSSRVUSGTerminatedAt;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withOsExtendedVolumesVolumesAttached = function (osExtendedVolumesVolumesAttached) {
        this['os-extended-volumes:volumes_attached'] = osExtendedVolumesVolumesAttached;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "osExtendedVolumesVolumesAttached", {
        get: function () {
            return this['os-extended-volumes:volumes_attached'];
        },
        set: function (osExtendedVolumesVolumesAttached) {
            this['os-extended-volumes:volumes_attached'] = osExtendedVolumesVolumesAttached;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withFault = function (fault) {
        this['fault'] = fault;
        return this;
    };
    NovaServer.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    NovaServer.prototype.withHostStatus = function (hostStatus) {
        this['host_status'] = hostStatus;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "hostStatus", {
        get: function () {
            return this['host_status'];
        },
        set: function (hostStatus) {
            this['host_status'] = hostStatus;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withOSEXTSRVATTRHostname = function (oSEXTSRVATTRHostname) {
        this['OS-EXT-SRV-ATTR:hostname'] = oSEXTSRVATTRHostname;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "oSEXTSRVATTRHostname", {
        get: function () {
            return this['OS-EXT-SRV-ATTR:hostname'];
        },
        set: function (oSEXTSRVATTRHostname) {
            this['OS-EXT-SRV-ATTR:hostname'] = oSEXTSRVATTRHostname;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withOSEXTSRVATTRReservationId = function (oSEXTSRVATTRReservationId) {
        this['OS-EXT-SRV-ATTR:reservation_id'] = oSEXTSRVATTRReservationId;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "oSEXTSRVATTRReservationId", {
        get: function () {
            return this['OS-EXT-SRV-ATTR:reservation_id'];
        },
        set: function (oSEXTSRVATTRReservationId) {
            this['OS-EXT-SRV-ATTR:reservation_id'] = oSEXTSRVATTRReservationId;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withOSEXTSRVATTRLaunchIndex = function (oSEXTSRVATTRLaunchIndex) {
        this['OS-EXT-SRV-ATTR:launch_index'] = oSEXTSRVATTRLaunchIndex;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "oSEXTSRVATTRLaunchIndex", {
        get: function () {
            return this['OS-EXT-SRV-ATTR:launch_index'];
        },
        set: function (oSEXTSRVATTRLaunchIndex) {
            this['OS-EXT-SRV-ATTR:launch_index'] = oSEXTSRVATTRLaunchIndex;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withOSEXTSRVATTRKernelId = function (oSEXTSRVATTRKernelId) {
        this['OS-EXT-SRV-ATTR:kernel_id'] = oSEXTSRVATTRKernelId;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "oSEXTSRVATTRKernelId", {
        get: function () {
            return this['OS-EXT-SRV-ATTR:kernel_id'];
        },
        set: function (oSEXTSRVATTRKernelId) {
            this['OS-EXT-SRV-ATTR:kernel_id'] = oSEXTSRVATTRKernelId;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withOSEXTSRVATTRRamdiskId = function (oSEXTSRVATTRRamdiskId) {
        this['OS-EXT-SRV-ATTR:ramdisk_id'] = oSEXTSRVATTRRamdiskId;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "oSEXTSRVATTRRamdiskId", {
        get: function () {
            return this['OS-EXT-SRV-ATTR:ramdisk_id'];
        },
        set: function (oSEXTSRVATTRRamdiskId) {
            this['OS-EXT-SRV-ATTR:ramdisk_id'] = oSEXTSRVATTRRamdiskId;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withOSEXTSRVATTRRootDeviceName = function (oSEXTSRVATTRRootDeviceName) {
        this['OS-EXT-SRV-ATTR:root_device_name'] = oSEXTSRVATTRRootDeviceName;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "oSEXTSRVATTRRootDeviceName", {
        get: function () {
            return this['OS-EXT-SRV-ATTR:root_device_name'];
        },
        set: function (oSEXTSRVATTRRootDeviceName) {
            this['OS-EXT-SRV-ATTR:root_device_name'] = oSEXTSRVATTRRootDeviceName;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withOSEXTSRVATTRUserData = function (oSEXTSRVATTRUserData) {
        this['OS-EXT-SRV-ATTR:user_data'] = oSEXTSRVATTRUserData;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "oSEXTSRVATTRUserData", {
        get: function () {
            return this['OS-EXT-SRV-ATTR:user_data'];
        },
        set: function (oSEXTSRVATTRUserData) {
            this['OS-EXT-SRV-ATTR:user_data'] = oSEXTSRVATTRUserData;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withTags = function (tags) {
        this['tags'] = tags;
        return this;
    };
    NovaServer.prototype.withLocked = function (locked) {
        this['locked'] = locked;
        return this;
    };
    NovaServer.prototype.withAccessIPv4 = function (accessIPv4) {
        this['accessIPv4'] = accessIPv4;
        return this;
    };
    NovaServer.prototype.withAccessIPv6 = function (accessIPv6) {
        this['accessIPv6'] = accessIPv6;
        return this;
    };
    NovaServer.prototype.withConfigDrive = function (configDrive) {
        this['config_drive'] = configDrive;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "configDrive", {
        get: function () {
            return this['config_drive'];
        },
        set: function (configDrive) {
            this['config_drive'] = configDrive;
        },
        enumerable: false,
        configurable: true
    });
    NovaServer.prototype.withProgress = function (progress) {
        this['progress'] = progress;
        return this;
    };
    NovaServer.prototype.withOsSchedulerHints = function (osSchedulerHints) {
        this['os:scheduler_hints'] = osSchedulerHints;
        return this;
    };
    Object.defineProperty(NovaServer.prototype, "osSchedulerHints", {
        get: function () {
            return this['os:scheduler_hints'];
        },
        set: function (osSchedulerHints) {
            this['os:scheduler_hints'] = osSchedulerHints;
        },
        enumerable: false,
        configurable: true
    });
    return NovaServer;
}());
exports.NovaServer = NovaServer;
/**
    * @export
    * @enum {string}
    */
var NovaServerStatusEnum;
(function (NovaServerStatusEnum) {
    NovaServerStatusEnum["ACTIVE"] = "ACTIVE";
    NovaServerStatusEnum["BUILD"] = " BUILD";
    NovaServerStatusEnum["DELETED"] = "DELETED";
    NovaServerStatusEnum["ERROR"] = "ERROR";
    NovaServerStatusEnum["HARD_REBOOT"] = "HARD_REBOOT";
    NovaServerStatusEnum["MIGRATING"] = "MIGRATING";
    NovaServerStatusEnum["REBOOT"] = "REBOOT";
    NovaServerStatusEnum["RESIZE"] = "RESIZE";
    NovaServerStatusEnum["REVERT_RESIZE"] = "REVERT_RESIZE";
    NovaServerStatusEnum["SHELVED"] = "SHELVED";
    NovaServerStatusEnum["SHELVED_OFFLOADED"] = "SHELVED_OFFLOADED";
    NovaServerStatusEnum["SHUTOFF"] = "SHUTOFF";
    NovaServerStatusEnum["UNKNOWN"] = "UNKNOWN";
    NovaServerStatusEnum["VERIFY_RESIZE"] = "VERIFY_RESIZE";
})(NovaServerStatusEnum = exports.NovaServerStatusEnum || (exports.NovaServerStatusEnum = {}));
/**
    * @export
    * @enum {string}
    */
var NovaServerOSDCFDiskConfigEnum;
(function (NovaServerOSDCFDiskConfigEnum) {
    NovaServerOSDCFDiskConfigEnum["AUTO"] = "AUTO";
    NovaServerOSDCFDiskConfigEnum["MANUAL"] = "MANUAL";
})(NovaServerOSDCFDiskConfigEnum = exports.NovaServerOSDCFDiskConfigEnum || (exports.NovaServerOSDCFDiskConfigEnum = {}));
/**
    * @export
    * @enum {string}
    */
var NovaServerOSEXTSTSTaskStateEnum;
(function (NovaServerOSEXTSTSTaskStateEnum) {
    NovaServerOSEXTSTSTaskStateEnum["SHOUTOFF"] = "SHOUTOFF";
    NovaServerOSEXTSTSTaskStateEnum["RESIZE"] = " RESIZE";
    NovaServerOSEXTSTSTaskStateEnum["REBUILD"] = " REBUILD";
    NovaServerOSEXTSTSTaskStateEnum["VERIFY_RESIZE"] = " VERIFY_RESIZE";
    NovaServerOSEXTSTSTaskStateEnum["REVERT_RESIZE"] = " REVERT_RESIZE";
    NovaServerOSEXTSTSTaskStateEnum["PAUSED"] = " PAUSED";
    NovaServerOSEXTSTSTaskStateEnum["MIGRATING"] = " MIGRATING";
    NovaServerOSEXTSTSTaskStateEnum["SUSPENDED"] = " SUSPENDED";
    NovaServerOSEXTSTSTaskStateEnum["RESCUE"] = " RESCUE";
    NovaServerOSEXTSTSTaskStateEnum["ERROR"] = " ERROR";
    NovaServerOSEXTSTSTaskStateEnum["DELETED"] = " DELETED";
    NovaServerOSEXTSTSTaskStateEnum["SOFT_DELETED"] = "SOFT_DELETED";
    NovaServerOSEXTSTSTaskStateEnum["SHELVED"] = "SHELVED";
    NovaServerOSEXTSTSTaskStateEnum["SHELVED_OFFLOADED"] = "SHELVED_OFFLOADED";
})(NovaServerOSEXTSTSTaskStateEnum = exports.NovaServerOSEXTSTSTaskStateEnum || (exports.NovaServerOSEXTSTSTaskStateEnum = {}));
/**
    * @export
    * @enum {string}
    */
var NovaServerOSEXTSTSVmStateEnum;
(function (NovaServerOSEXTSTSVmStateEnum) {
    NovaServerOSEXTSTSVmStateEnum["ACTIVE"] = "ACTIVE";
    NovaServerOSEXTSTSVmStateEnum["BUILDING"] = "BUILDING";
    NovaServerOSEXTSTSVmStateEnum["STOPPED"] = "STOPPED";
    NovaServerOSEXTSTSVmStateEnum["RESIZED"] = "RESIZED";
    NovaServerOSEXTSTSVmStateEnum["PAUSED"] = "PAUSED";
    NovaServerOSEXTSTSVmStateEnum["SUSPENDED"] = "SUSPENDED";
    NovaServerOSEXTSTSVmStateEnum["RESCUED"] = "RESCUED";
    NovaServerOSEXTSTSVmStateEnum["ERROR"] = "ERROR";
    NovaServerOSEXTSTSVmStateEnum["DELETED"] = "DELETED";
    NovaServerOSEXTSTSVmStateEnum["SOFT_DELETED"] = "SOFT_DELETED";
    NovaServerOSEXTSTSVmStateEnum["SHELVED"] = "SHELVED";
    NovaServerOSEXTSTSVmStateEnum["SHELVED_OFFLOADED"] = "SHELVED_OFFLOADED";
})(NovaServerOSEXTSTSVmStateEnum = exports.NovaServerOSEXTSTSVmStateEnum || (exports.NovaServerOSEXTSTSVmStateEnum = {}));
/**
    * @export
    * @enum {string}
    */
var NovaServerHostStatusEnum;
(function (NovaServerHostStatusEnum) {
    NovaServerHostStatusEnum["UP"] = "UP";
    NovaServerHostStatusEnum["UNKNOWN"] = "UNKNOWN";
    NovaServerHostStatusEnum["DOWN"] = "DOWN";
    NovaServerHostStatusEnum["MAINTENANCE"] = "MAINTENANCE";
})(NovaServerHostStatusEnum = exports.NovaServerHostStatusEnum || (exports.NovaServerHostStatusEnum = {}));
