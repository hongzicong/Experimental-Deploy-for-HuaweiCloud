import { NovaLink } from './NovaLink';
import { NovaServerSecurityGroup } from './NovaServerSecurityGroup';
export declare class NovaCreateServersResult {
    id: string;
    links: Array<NovaLink>;
    private 'security_groups';
    private 'OS-DCF:diskConfig';
    private 'reservation_id'?;
    adminPass: string;
    constructor(id?: any, links?: any, securityGroups?: any, oSDCFDiskConfig?: any, adminPass?: any);
    withId(id: string): NovaCreateServersResult;
    withLinks(links: Array<NovaLink>): NovaCreateServersResult;
    withSecurityGroups(securityGroups: Array<NovaServerSecurityGroup>): NovaCreateServersResult;
    set securityGroups(securityGroups: Array<NovaServerSecurityGroup> | undefined);
    get securityGroups(): Array<NovaServerSecurityGroup> | undefined;
    withOSDCFDiskConfig(oSDCFDiskConfig: NovaCreateServersResultOSDCFDiskConfigEnum): NovaCreateServersResult;
    set oSDCFDiskConfig(oSDCFDiskConfig: NovaCreateServersResultOSDCFDiskConfigEnum | undefined);
    get oSDCFDiskConfig(): NovaCreateServersResultOSDCFDiskConfigEnum | undefined;
    withReservationId(reservationId: string): NovaCreateServersResult;
    set reservationId(reservationId: string | undefined);
    get reservationId(): string | undefined;
    withAdminPass(adminPass: string): NovaCreateServersResult;
}
/**
    * @export
    * @enum {string}
    */
export declare enum NovaCreateServersResultOSDCFDiskConfigEnum {
    MANUAL = "MANUAL",
    AUTO = "AUTO"
}
